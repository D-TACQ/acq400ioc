#!/bin/sh
# sync_role.acq1001
# set.site 0 sync_role fpmaster\|master\|solo\|slave 

/usr/local/epics/scripts/wait_ioc_ready 2>&1 >/dev/null

sync_trg_to_clk() {
	[ -e /etc/acq400/1/sync_trg_to_clk ] && \
		set.site 1 sync_trg_to_clk $1
}

TRG_SENSE=rising
CLK_SENSE=rising
# ics527 minimum output rate
FMIN=4000000

for k in $*; do
	key=${k%=*}; val=${k#*=}
	case $key in
	TRG:SENSE)
		TRG_SENSE=$val;;
	CLK:SENSE)
		CLK_SENSE=$val;;
	TRG:DX)
		TRG_DX=$val;;		# not previously defined
	CLK:DX)
		CLK_DX=$val;;
	CLKDIV)
		CLKDIV=$val;;
	*)
		[ $key != $val ] && echo "error $key not defined";;
	esac
done

set_mbclk() {
		set.site 0 SIG:CLK_MB:SET $1
		set.site 1 CLKDIV $CLKDIV
}

set_acq43x_sample_rate() {
		set.site 1 ACQ43X_SAMPLE_RATE $1
}
set_mb=set_mbclk

select_lo_zclk() {
		set.site 0 SYS:CLK:FPMUX ZCLK
		set.site 0 SIG:ZCLK_SRC INT33M
		set.site 0 SIG:CLK_MB:FIN 33333000
}
select_lo_xclk() {
		set.site 0 SYS:CLK:FPMUX XCLK
		set.site 0 SIG:CLK_MB:FIN 32768000
}
select_lo=select_lo_zclk

if [ -e /etc/acq400/1/ACQ43X_SAMPLE_RATE ]; then
		select_lo=select_lo_xclk
		set_mb=acq43x_sample_rate
fi

# common to all
# even a slave can master another link in the chain..
# we share the MB clock and the SITE trigger 
# The MASTER syncs the SITE trigger, SLAVES MUST leave it untouched.

set_common() {	
		set.site 0 SIG:*:RESET=1
}

set_out() {	
		set.site 0 SIG:SYNC_OUT:CLK CLK
		set.site 0 SIG:SYNC_OUT:CLK:DX d1
		set.site 0 SIG:SYNC_OUT:TRG TRG
		set.site 0 SIG:SYNC_OUT:TRG:DX d2
}

set_slave() {	
		set_out
		sync_trg_to_clk 0
		
		set.site 0 SIG:SRC:CLK:1 HDMI
		set.site 0 SIG:SRC:TRG:0 HDMI_TRG
		set.site 0 SIG:SRC:SYNC:0 HDMI
		set.site 1 "CLK=1; CLK:DX=d1; CLK:SENSE=${CLK_SENSE}"
		set.site 1 "TRG=1; TRG:DX=d0; TRG:SENSE=${TRG_SENSE}"
		set.site 1 "SYNC=1; SYNC:DX=d0; SYNC:SENSE=rising"
		set.site 1 CLKDIV=${CLKDIV:-1}
		echo set_slave >/dev/shm/role
}

set_common_master() {		
		set.site 0 SIG:SRC:CLK:1 MCLK
		set.site 1 "SYNC=0"
		sync_trg_to_clk 1
		set.site 1 CLKDIV=${CLKDIV:-1}
}

find_valid_set() {
		let fs=$1
		let clkdiv=1
		if [ $fs -lt $FMIN ]; then
			let clkdiv="10*$FMIN/$fs"
			clkdiv=$(printf "%d" $clkdiv)
			let fs=$clkdiv*$fs
		fi
		FS=$fs
		CLKDIV=$clkdiv
}



set_master() {
		set_common_master
		find_valid_set $1
		$select_lo
		$set_mb $FS
		set.site 1 "CLK=1; CLK:DX=${CLK_DX:-d1}; CLK:SENSE=${CLK_SENSE}"
		set.site 1 "TRG=1; TRG:DX=${TRG_DX:-d1}; TRG:SENSE=${TRG_SENSE}"
		echo set_master >/dev/shm/role
}

set_fpmaster() {
		set_common_master
		find_valid_set $1
		set.site 0 SYS:CLK:FPMUX FPCLK               
		set.site 0 SIG:CLK_MB:FIN $2
		$set_mb $FS
 		set.site 1 "CLK=1; CLK:DX=${CLK_DX:-d1}; CLK:SENSE=${CLK_SENSE}"
 		set.site 1 "TRG=1; TRG:DX=${CLK_DX:-d0}; TRG:SENSE=${TRG_SENSE}"  
    	echo set_fpmaster >/dev/shm/role
}

case $1 in
"")
	if [ -e /dev/shm/role ]; then
		cat /dev/shm/role
	else
		echo "role not set"
	fi;;
fpmaster)
		set_common
		set_out	
    	set_fpmaster ${2:-1000000} ${3:-1000000};;
master)
		set_common
		set_out
		set_master ${2:-1000000};;
solo)
		set_common
		set_master ${2:-1000000};;
slave)	
		set_common
		set_out
		set_slave;;
*)
		echo "USAGE sync_role {fpmaster|master|slave|solo} [CLKHZ] [FIN]"
		echo "modifiers [CLK|TRG:SENSE=falling|rising] [CLK|TRG:DX=d0|d1]"
		echo "modifiers [CLKDIV=div] # use slave mode with ACQ43x";;
esac
