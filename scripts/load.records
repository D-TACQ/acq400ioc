#!/bin/sh

HOST=${1:-$(hostname)}
SIZE=${SIZE:-4096}
TYPE=${TYPE:-SHORT}
FNAME=AI

HSIZE=256


knobs() {
	echo /dev/acq420.$1.knobs
}

# There's only ONE lot of AI records... this is deliberate for now
make_AI() {
	SITE=$1
	if [ -e $2.knobs/data32 ]; then
		if [ $(cat $2.knobs/data32) -eq 1 ]; then
			TYPE=LONG
		fi
	fi
	if [ -e $(knobs $SITE)/nchan ]; then
		NCHAN=$(cat $(knobs $SITE)/nchan)
	else
		NCHAN=4
	fi
	let ch=0; while [ $ch -lt $NCHAN ]; do
		let ch=$ch+1
		cid=$(printf "%02d" $ch)
		let IDX=$ch

		PRAMS="UUT=${HOST},SITE=${SITE},cid=$cid,idx=${IDX},fname=AI.${SITE}"
		WPRAMS="${PRAMS},size=${SIZE},type=${TYPE}"

		echo dbLoadRecords\(\"db/wfAcqHost.db\",\"${WPRAMS}\"\)
	done
}

load_420() {
	SITE=$1

	CPRAMS="UUT=${HOST},SITE=${SITE}"	
	echo 'dbLoadRecords("db/acq420fmc.db","'${CPRAMS}'")'

	
	HPRAMS="${CPRAMS},size=$HSIZE,type=LONG,fname=HG.${SITE}"
	echo 'dbLoadRecords("db/hgAcqHost.db","'${HPRAMS}'")'
	
	make_AI $SITE	$ACQ420

	echo 'dbLoadRecords("db/counter.db","'${CPRAMS},lname=clk_count'")'
	echo 'dbLoadRecords("db/counter.db","'${CPRAMS},lname=sample_count'")'

	for ch in 1 2 3 4
	do
		if [ -e $(knobs $SITE)/gain$ch ]; then
			echo 'dbLoadRecords("db/gain.db","'${CPRAMS}',CH='$ch'")'
		fi
	done
	
	TPRAMS="${CPRAMS},SPORT=S${SITE}"
	echo 'dbLoadRecords("db/signal.db","'${TPRAMS}',FNAM=TRG,FN=trg,ZNAM=soft,ONAM=external")'
	echo 'dbLoadRecords("db/signal.db","'${TPRAMS}',FNAM=CLK,FN=clk,ZNAM=internal,ONAM=external")'
	echo 'dbLoadRecords("db/signal.db","'${TPRAMS}',FNAM=SYNC,FN=sync,ZNAM=internal,ONAM=external")'
	echo 'dbLoadRecords("db/signal.db","'${TPRAMS}',FNAM=EVENT1,FN=event1,ZNAM=disable,ONAM=enable")'
	echo 'dbLoadRecords("db/signal.db","'${TPRAMS}',FNAM=EVENT0,FN=event0,ZNAM=disable,ONAM=enable")'
	echo 'dbLoadRecords("db/acq420fmc99.db","'${CPRAMS}'")'
	echo 'drvAsynIPPortConfigure("S'${SITE}'", "127.0.0.1:422'${SITE}'")'
}


cat - <<EOF
epicsEnvSet("STREAM_PROTOCOL_PATH","./protocols")
dbLoadDatabase("dbd/acq400ioc.dbd",0,0)
acq400ioc_registerRecordDeviceDriver(pdbbase)
dbLoadRecords("db/system.db","UUT=${HOST}")
EOF

for ACQ420 in /dev/acq420.?
do
	load_420 ${ACQ420##*.} $ACQ420
done

cat - <<EOF2
#	asynSetTraceMask("S0",-1,0xff)
iocInit()
dbl > /tmp/records.dbl
EOF2
