#!/bin/sh

HOST=${1:-$(hostname)}
SIZE=${SIZE:-4096}
TYPE=${TYPE:-SHORT}
FNAME=AI

HSIZE=256

CTR32=4294967296
CTR31=2147483648
CTR28=268435456
CTR16=65536
CTR20=1048576

SN=${HOST#*_}
SN=${SN#0}
SN=${SN#0}

FIRST_SITE=-1

source /etc/sysconfig/acq400.conf


# gains are loaded last, as they tweak other WF records, must be there first..
echo '#  gains_last'  > /tmp/gains_last
echo '#  st_pre.cmd'  > /tmp/st_pre.cmd
echo '#  st_post.cmd' > /tmp/st_post.cmd

if [ -e /dev/acq400.12.knobs ]; then
	LOAD_INTMON=y
fi


source ./scripts/mtype.sh
source ./scripts/record_support.sh
source /tmp/u-boot_env
MB_MODEL=$(basename ${devicetree_image%*.dtb})

FIRST_AI_WF_RECORDS=1

make_AI() {
	site=$1
	type=SHORT
	maxcode=32768
	
	if [ -e /etc/acq400/$site/data32 ] && 
			[ $(cat /etc/acq400/$site/data32) -eq 1 ]; then
			type=LONG
			maxcode=2147483648
	fi
	nchan=$(get_nchan $site)
	vmax=$(get_range $site)
	eslo=$(echo $vmax $maxcode | awk '{ print $1/$2 }')

	let ch=0; while [ $ch -lt $nchan ]; do
		let ch=$ch+1
		cid=$(printf "%02d" $ch)
		let IDX=$ch

		PRAMS="UUT=${HOST},SITE=${site},cid=$cid,idx=${IDX},fname=AI.${site}"
		wprams="${PRAMS},size=${SIZE},type=${type}"
		wprams="${wprams},maxcode=${maxcode},vmax=${vmax},eslo=${eslo}"

		dblr \"db/wfAcqHost.db\",\"${wprams}\"
	done
	if [ $FIRST_AI_WF_RECORDS -eq 1 ]; then		  
		dblr \"db/wfAcqHostTb.db\",\"${PRAMS},size=${SIZE}\"	
		FIRST_AI_WF_RECORDS=0
	fi	
	let nchanp1="$nchan+1"  
	dblr \"db/cal.db\",\"${wprams},nchanp1=${nchanp1}\"		
}


make_AI_records() {
	site=$1
	let i1=$2
	let i2=$i1+$3
	let ch=1
	
	touch /dev/shm/subrate
	
	vmax=$(get_range $site)
	
	if [ $(cat /etc/acq400/$site/data32) -eq 1 ]; then
			maxcode=8388608
	else
			maxcode=32768
	fi	
	eslo=$(echo $vmax $maxcode | awk '{ print $1/$2 }')
		
	for ix in $(seq $i1 $i2)
	do
		cid=$(printf "%02d" $ch)
		PRAMS="UUT=$HOST:${site},cid=$cid,idx=$ix,fname=subrate"
		PRAMS=$PRAMS",egul=-$vmax,eguf=$vmax,lopr=-$vmax,hopr=$vmax,eslo=$eslo"		
		dblr \"db/aiAcqHost.db\",\"$PRAMS\"		
		let ch=$ch+1
	done
				
}

FIRST_AI_TR_RECORDS=1

make_AI_TR_records() {
	site=$1
	let i1=$2
	let i2=$i1+$3
	let ch=1
	let size=$4
	
	if [ $(cat /etc/acq400/$site/data32) -eq 1 ]; then
			maxcode=2147483648		
			TYPE=LONG
	else
			maxcode=32768
			TYPE=SHORT			
	fi
	vmax=$(get_range $site)	
	eslo=$(echo $vmax $maxcode | awk '{ print $1/$2 }')
		
	for ix in $(seq $i1 $i2)
	do
		cid=$(printf "%02d" $ch)
		let ix1=$ix+1
		alt=$(printf "%02d" $ix1)
		PRAMS="UUT=$HOST,SITE=${site},cid=$cid,ch=$ch,alt=$alt"
		WPRAMS="${PRAMS},size=${size},type=${TYPE}"
		WPRAMS="${WPRAMS},maxcode=${maxcode},vmax=${vmax},eslo=${eslo}"		
		dblr \"db/wfAcqHostTw.db\",\"$WPRAMS\"		
		let ch=$ch+1
	done
	[ $FIRST_AI_TR_RECORDS -eq 1 ] && [ "x$WPRAMS" != "x" ] && \
		dblr \"db/wfAcqHostTwTb.db\",\"$WPRAMS\"	
	FIRST_AI_TR_RECORDS=0	
}

make_AI_subrate() {
	kctrl=/dev/acq400/data/.control
	if [ -e $kctrl ]; then
		echo 1>&2 "load.records: control $(cat $kctrl)"
		source $kctrl
	else
		NSAMPLES=4096
		TYPE=short
	fi

	eval $(cat /dev/acq400.0.knobs/aggregator)
	sites=$(echo $sites | tr , \  )
	if [ "x$sites" = "xnone" ]; then
		return
	elif [ "x$sites" != "x" ]; then
		let i1=0
		for site in $sites
		do
			nc=$(get.site $site NCHAN)
			make_AI_records $site $i1 $nc-1
			if [ "x$NSAMPLES" != "x" ]; then
				make_AI_TR_records $site $i1 $nc-1 $NSAMPLES
			fi
			let i1=$i1+$nc
	 	done
	fi
}

acq480_div() {
	if [ "x$MB_MODEL" = "xkmcuz30" ]; then
		echo 1
	else
		axi=/dev/acq400.0.knobs/has_axi_dma
		if [ -e $axi ] && [ $(cat $axi) -eq 2 ]; then
			echo 4
		else
			echo 1
		fi
	fi
}
		

load_AO() {
		site=$1
		mtype=$2
		cprams=$3
		
		case $mtype in
		$MT_AO420)			
			for ch in $(seq 1 4)
			do
				dblr '"db/ao420fmc.db","'${cprams},cid=$ch'"'
				echo "seq ao420_range_set \"UUT=${HOST},SITE=${site},CID=$ch\"" >>/tmp/st_post.cmd
				# PINI fails to set VAL on AO record. set GAIN (attenuation) to 100%
				echo "dbpf ${HOST}:${site}:AWG:G:${ch} 100" >> /tmp/st_post.cmd
			done
			dblr '"db/aoALL.db","'${cprams}'"'			
			#echo 'dbLoadRecords("db/ao420fmc.db","'${cprams},cid=32'")'
			;;
		$MT_AO428)
			for ch in $(seq 1 8)
			do
				cid=$(printf "%02d" $ch)
				dblr '"db/ao428elf.db","'${cprams},cid=$cid'"'
			done
			#echo 'dbLoadRecords("db/ao420fmc.db","'${cprams},cid=32'")'
			;;
		$MT_AO424)
			for ch in $(seq 1 32)
			do
				cid=$(printf "%02d" $ch)
				dblr '"db/ao424fmc.db","'${cprams},cid=$cid'"'
				echo "seq ao424_range_set \"UUT=$(hostname),SITE=${site},CID=$cid\"" >>/tmp/st_post.cmd
			done
			dblr '"db/aoALL.db","'${cprams},SPORT=S${site}'"'
			has_range=0
			for kb in /etc/acq400/${site}/range[0-9]*
			do
				if [ -e $kb ]; then
					ix=${kb#*range}
					if [ "$ix" != "99" ]; then
						ch=$ix									
						dblr '"db/ao424_range.db","'${cprams}',CH='$ch',IX='$ix',KNOB='${kb}'"'
					fi
					has_range=1
				fi		
			done
			if [ $has_range -ne 0 ]; then
				dblr '"db/ao424_rangeM.db","'${cprams},SPORT=S${site}',CH='ALL'"'				
			fi;;			
		esac
}

HAS_ACQ43X=0
ACQ480_COUNT=0
ACQ480_S1=0

OUTX="ABCDEFGH"

load_400() {
	site=$1
	
	if [ $site -lt 1 ] || [ $site -gt 6 ]; then 
		echo 1>&2 "load.records:error site:$site"
		exit 1	
	fi
	# since driver B2.457, module_type printed in hex
	model=$(cat /dev/acq400.${site}.knobs/module_type)
	name=$(nameFromMT $model)
	has_output=$(hasOutput $model)
	
	echo 1>&2 "load.records:load_400 site:$site model:$model name:$name"
	
	LO=100000000
	maxhz=1000000	
		
	if [ -e /etc/acq400/$site/MAX_KHZ ]; then
		let maxhz="$(cat /etc/acq400/$site/MAX_KHZ) * 1000"
	fi
	cprams="UUT=${HOST},SITE=${site},SPORT=S${site}"
	dblr '"db/acq400.db","'${cprams}'"'
	create_asyn_channel S${site} 127.0.0.1:422${site}

	# temporary hack. define in epics.sh eg 
	# export GAINS=G0=10,G1=5,G2=2,G3=1
	[ -e /dev/sites/$site/gains.sh ] && source /dev/sites/$site/gains.sh	
	#gains=${GAINS:-G0=10,G1=5,G2=2.5,G3=1.25}
	gains=${GAINS:-G0=10,G1=5,G2=2,G3=1}
	gain_file_pfx="gain"
	
	is_adc="no"
	has_ch_gains=0
	calmon="calmon"
	decim=1;

	case $model in
	$MT_ACQ420|$MT_ACQ420F|$MT_ACQ424|$MT_ACQ425|$MT_ACQ425F|$MT_ACQ427|$MT_ACQ427F|$MT_BOLO8|$MT_BOLO8B|$MT_ACQ423)
		is_adc="sar"
		calmon=calmon42x
		case $model in
		$MT_ACQ423)
			has_ch_gains=1
			gains="GX=fixed"
			gain_file_pfx="gain423";;
		$MT_ACQ424)
			LO=66000000;;
		*)
			has_ch_gains=1;;						
		esac;;
	
	
	$MT_ACQ435|$MT_ACQ430|$MT_ACQ437)
		is_adc="ds"
		case $model in
		$MT_ACQ437)
			has_ch_gains=1;;
		esac
		
		
		if [ "x${site}" = "x1" ]; then
			HAS_ACQ43X=1
			echo 1>&2 "HAS_ACQ43X Detected: $HAS_ACQ43X"
		fi
		if [ $model = 6	]; then
				gains="G0=10,G1=5,G2=2,G3=1"				
		fi		
		let LO=$LO/256;;
	$MT_ACQ480)		
		let ACQ480_COUNT=$ACQ480_COUNT+1
		[ $ACQ480_COUNT -eq 1 ] && \
			cp protocols/continuous-480.proto protocols/continuous.proto
		if [ $ACQ480_S1 -eq 0 ]; then
			# NB force train operates on S0
			dblr '"db/acq480_train.db","'UUT=${HOST},SPORT=S0'"'
			ACQ480_S1=$site
		fi
		is_adc="sar"
		# gains are digital.
		maxhz=80000000
		has_ch_gains=1
		calmon=calmon480
		
		mprams="UUT=${HOST},SITE=${site},SPORT=S${site}_480"
		create_asyn_channel S${site}_480 127.0.0.1:422${site}
		create_asyn_channel S${site}_480t 127.0.0.1:432${site}
		
		t50r=0; jcp=0; 
		sroot="/etc/acq400/${site}"
		[ -e ${sroot}/T50R_1 ] && t50r=1
		[ -e ${sroot}/JC_LOL ] && jcp=1		
		[ -e ${sroot}/acq480_fpga_decim ] && \
			decim=$(cat ${sroot}/acq480_fpga_decim)
		a480p="SPTRAIN=S${site}_480t,JCP=${jcp},T50R=${t50r},DECIM=${decim}"
		
		dblr '"db/acq480fmc.db","'${mprams},${a480p}'"'

		for ic in $(seq 1 8); do
			ch=$(printf "%02d" $ic)
			dblr '"db/acq480fmc_adc.db","'${mprams},CH=${ch}'"'
			[ $t50r -ne 0 ] && \
				dblr '"db/acq480fmc50R.db","'${mprams},CH=:${ch},RAW=_${ic}'"'
		done
		[ $t50r -ne 0 ] && dblr '"db/acq480fmc50R.db","'${mprams},CH=,RAW='"';;
	$MT_AO420|$MT_AO424|$MT_AO428)
		dblr '"db/awg.db","'${cprams}'"'	
		load_AO $site $model $cprams		
		let LO=66000000;;
#	@@todo : different flavour of calmon for SAR ADC needed	
	$MT_DIO432|$MT_DIO432P|$MT_DIO482)
	# probably should be common to all @@todo
		name=$(cat /dev/acq400.$site.knobs/module_name)
		[ -e ./scripts/load.$name ] && ./scripts/load.$name $HOST $site;;		
	$MT_DIOB)		
		name=$(cat /dev/acq400.$site.knobs/module_name)
		[ -e ./scripts/load.$name ] && ./scripts/load.$name $HOST $site
		return;;
	$MT_RAD_CELF)
		./scripts/load.rad_celf $HOST $site
		return;;
	$MT_PIG_CELF)
		is_adc="sar"
		dblr '"db/pigcelf.db","'${cprams}'"'
		calmon=none;;
	esac
	
	echo 1>&2 "is_adc $is_adc"
	
	if [ "$is_adc" != "no" ]; then
		make_AI $site
		aprams="UUT=${HOST},SITE=${site},CHG=${has_ch_gains}"
		dblr '"db/adc-'${is_adc}'.db","'$aprams'"'
		if [ "x${calmon}" != "xnone" ]; then
			echo >>/tmp/st_post.cmd "seq ${calmon} \"uut=${HOST},site=${site}\""
		fi
	fi
	if [ "$has_output" = "yes" ]; then
		aprams="UUT=${HOST},SITE=${site},SPORT=S${site}"
		dblr '"db/xo.db","'${aprams}'"'
		dblr '"db/awg.db","'${aprams}'"'
	fi
	
	hwmondb=db/hwmon_${name}.db
	if [ -e ${hwmondb} ]; then
		let hmb=$site
		case $MB_MODEL in
		kmcu*)
			let hmb=$hmb+1;;
		esac		
		dblr '"'${hwmondb}'","'${cprams},HMB=${hmb}'"'
	fi
	if [ -e /etc/acq400/${site}/anatrg_01 ]; then
		[ "x$ANATRG_LOADED" = "x" ] && source ./scripts/load.anatrg
		make_anatrg ${site}
	elif [ -e /etc/acq400/${site}/deltrg_01 ]; then
		[ "x$DELTRG_LOADED" = "x" ] && source ./scripts/load.deltrg 
		make_deltrg ${site}
	fi

	if [ ${site} -eq 1 ]; then
		dblr '"db/eventCount.db","'${cprams},SPORT=SPEV'"'		
		sprams="${cprams},CTRMAX=$CTR28,DT=1,DTC=1"
		dblr '"db/_counter.db","'${sprams},SIG=EVT,lname=INDX'"'
		dblr '"db/_counter.db","'${sprams},SIG=EVT,lname=SMPL'"'
		create_asyn_channel SPEV 127.0.0.1:4238
	fi
	
	dblr '"db/acq400fmc.db","'${cprams},'MAXHZ='${maxhz}'"'
		
	if [ "x$model" != "x$MT_ACQ480" ] && [ $HAS_ACQ43X -eq 0 ]; then
		dblr '"db/acq420fmc.db","'${cprams},'LO='${LO}'"'
	fi

	if [ ${site} -eq $FIRST_SITE ]; then
		mprams="UUT=${HOST},SITE=${site},SPORT=S${site}M"
		has_rgm=0
		if [ $HAS_ACQ43X -eq 1 ]; then
			dblr '"db/acq4xx_rgm.db","'${mprams},SRTM=SRTM'"'
			echo 1>&2 "HAS_ACQ43X Detected: $HAS_ACQ43X"
			#ACQ435 .. nb HIRES makes it /2
			# MUST  be AFTER acq420fmc.d to hook the right DT0
			dblr '"db/acq430fmc.db","'${mprams},LO=$LO'"'
			has_rgm=1
		elif [ "x$model" == "x$MT_ACQ480" ]; then
			dblr '"db/acq4xx_rgm.db","'${mprams},SRTM="nc"'"'
			has_rgm=1
		fi
		dblr '"db/has_rgm.db","'${mprams},HAS_RGM=$has_rgm'"'
		create_asyn_channel S${site}M 127.0.0.1:422${site}	
	fi	
				
	HPRAMS="${cprams},size=$HSIZE,type=LONG,fname=HG.${site}"
	dblr '"db/hgAcqHost.db","'${HPRAMS}'"'
	
	CTPR="${cprams},CTRMAX=$CTR28,DT=1,DTC=1"
	dblr '"db/counter.db","'${CTPR},lname=clk_count,pname=clk_count'"'
	case $model in
	$MT_BOLO8|$MT_BOLO8B)
		psc=adc_sample_count;;
	*)
		psc=sample_count;;
	esac
	
	dblr '"db/counter.db","'${CTPR},lname=CLK_COUNT,pname=clk_count'"'
	dblr '"db/counter.db","'${CTPR},lname=sample_count,pname=${psc}'"'
	dblr '"db/counter.db","'${CTPR},lname=SAMPLE_COUNT,pname=${psc}'"'
	dblr '"db/elapsed.db","'${CTPR},lname=SAMPLE_COUNT,DECIM=${decim}'"'



	 
	gain_file=db/${gain_file_pfx}.db
	(
	has_gain=0
	for kb in /etc/acq400/${site}/gain[0-9]*
	do
		if [ -e $kb ]; then
			ix=${kb#*gain}
			ch=$(printf "%02d" $ix)
			let fan0="($ix-1)/8+1"
			let f9="($ix-1)%8"
			ixgrp="IX=$ix,FAN=$fan0,fan=${OUTX:$f9:1}"
			dblr '"'${gain_file}'","'${cprams}',CH='$ch','$gains','$ixgrp'"'
			has_gain=1
		fi		
	done
	if [ $has_gain -ne 0 ]; then
		gain_file=db/${gain_file_pfx}M.db
		dblr '"'${gain_file}'","'${cprams}','$gains',CH='ALL'"'				
	fi
	) >>/tmp/gains_last
		
	dblr '"db/signal.db","'${cprams}',FNAM=TRG,FN=trg,ZNAM=none,ONAM=enable,DISV=1"'	
	dblr '"db/signal.db","'${cprams}',FNAM=CLK,FN=clk,ZNAM=internal,ONAM=external,DISV=1"'
	if [ $site -eq 1 ]; then
		dblr '"db/clkstatus.db","'${cprams}',FNAM=CLK,FN=clk,DISV=1"'
	fi
	dblr '"db/signal.db","'${cprams}',FNAM=SYNC,FN=sync,ZNAM=internal,ONAM=external,DISV=1"'
	dblr '"db/signal.db","'${cprams}',FNAM=EVENT1,FN=event1,ZNAM=disable,ONAM=enable,DISV=-1"'
	dblr '"db/signal.db","'${cprams}',FNAM=EVENT0,FN=event0,ZNAM=disable,ONAM=enable,DISV=-1"'
	if [ "x$model" = "x$MT_ACQ480" ]; then
		let sp1=$site+1		
		dblr '"db/acq480fmc99.db","'${cprams},SITEP1=${sp1},div=$(acq480_div)'"' \
			>>/tmp/st_pre.cmd
		if [ $ACQ480_COUNT -gt 1 ]; then
				if [ $ACQ480_S1 -eq 0 ]; then
					echo ERROR ACQ480S site $site ACQ480_S1 not set; exit 1
				fi
				case $site in
				2) outx=OUTA;;
				3) outx=OUTB;;
				4) outx=OUTC;;
				5) outx=OUTD;;
				6) outx=OUTE;;
				*) echo ERROR bad ACQ480S site $site; exit 1;;
				esac
				sprams=${cprams},A480M=${ACQ480_S1},OUTX=${outx}
				dblr '"db/acq480fmcSlave.db","'${sprams}'"'
		fi
	elif [ $HAS_ACQ43X -ne 0 ]; then
		dblr '"db/acq430fmc99.db","'${cprams}'"'
	else
		dblr '"db/acq420fmc99.db","'${cprams}'"'
	fi
	

}

load_421() {
	SITE=$1
	KB=/dev/acq400.${SITE}.knobs
	PRAMS="UUT=${HOST},SITE=${SITE}"
	for CX in 1 2
	do
		for sw in $(seq 1 20)
		do
			LNAME=$(printf "CH%02d:%02d" $CX $sw)
			PNAME=$(printf "%s/CH%02d.%02d" $KB $CX $sw)
			CPRAMS="${PRAMS},lname=${LNAME},pname=${PNAME}"
			dblr '"db/ao421mux.db","'${CPRAMS}'"'
		done
	done		
}

zynq_hwmon() {
	DEV=$1
	# scale values 
	# cat in_temp0_offset in_temp0_scale  (mC)
	# -2219
	# 123.040771484
	PRAMS="UUT=${HOST},lname=Z,pname=/dev/hwmon/Z/in_temp0_raw,scale=0.1230,offset=-2219"
	dblr '"db/hwmontemp.db","'${PRAMS}'"'
}


load_intmon() {
	activeirq=$(echo y | nc localhost 4239  | awk '{ print $1 }')
	dt=${INTMON_DT:-10}
	for irq in $activeirq
	do	
		dblr '"db/intmon.db","UUT='${HOST}',SPORT=SI,irq='$irq',dt='$dt'"'
	done	
}

load_gpg() {
	PRAMS="UUT=${HOST},SITE=0,SPORT=S0,ZNAM=internal,ONAM=external"
	if [ "x$GPG_MON" = "xy" ]; then
		mondis=0
	else
		mondis=1
	fi
	dblr '"db/gpg.db","UUT='${HOST}',SPORT=S0,MONDIS='${mondis}'"'	
	dblr '"db/signal.db","'${PRAMS},FNAM=GPG_CLK,FN=gpg_clk,DISV=1'"'	
	dblr '"db/signal.db","'${PRAMS},FNAM=GPG_TRG,FN=gpg_trg,DISV=1'"'
	dblr '"db/signal.db","'${PRAMS},FNAM=GPG_SYNC,FN=gpg_sync,DISV=1'"'
		
}
load_mb_base() {
	ns=$1
	mt=$2
	zynq_hwmon Z
	
	dblr '"db/acq400.db","'UUT=${HOST}',SITE=0,SPORT=S0"'
	
	for SITE in $(seq 0 $ns)
	do
		CPRAMS="UUT=${HOST},lname=${SITE}"				
		PRAMS="$CPRAMS,pname=/dev/hwmon/${SITE}/temp,scale=0.001,offset=0"
		dblr '"db/hwmontemp.db","'${PRAMS}'"'
	done

	dblr '"db/hwmonvolts_common.db","UUT='${HOST}'"'
	case $mt in
	acq2106*)			
			dblr '"db/hwmonvolts_2106.db","UUT='${HOST}'"'
			acq2106b=$(cat /sys/module/acq420fmc/parameters/is_acq2106B)
			dblr '"db/acq2106clk.db","UUT='${HOST}',acq2106b='${acq2106b}',SPORT=S0"';;
	kmcu*)
			dblr '"db/hwmonvolts_mtca-rtm-2.db","UUT='${HOST}'"';;
	*)
			dblr '"db/hwmonvolts.db","UUT='${HOST}'"';;
	esac
	case $mt in
	acq1001|acq1002)
		for site in $(seq 1 $ns)
		do
			# handles special case of v2f biscuit, no SITE LEDs.
			cprams="UUT=${HOST},site=${site}"
			[ -e /dev/gpio/LED/FMC${site}_G ] && \
				echo 'dbLoadRecords("db/acq2006sites.db","'${cprams}'")'
		done
		dblr '"db/acq1001leds.db","UUT='${HOST}'"' ;;
	acq2106*|acq2006|acq2006b)
		for site in $(seq 1 $ns)
		do
			cprams="UUT=${HOST},site=${site}"
			dblr '"db/acq2006sites.db","'${cprams}'"'
		done;;
	esac
	case $mt in
	acq2106*)
		dblr '"db/acq2106leds.db","UUT='${HOST}'"' ;;
	acq2006*)
		dblr '"db/acq2006leds.db","UUT='${HOST}'"' ;;
	esac
	if [ -e /dev/acq2006 ]; then
		if [ -e /etc/sysconfig/power ]; then
			source /etc/sysconfig/power
		else
			VAP=0;VAN=0
		fi
		dblr '"db/acq2006psu.db","UUT='${HOST},vap=$VAP,van=$VAN'"'
	fi	
	load_gpg
}

isRevA() {
	rc=0
	case $1 in
	acq1001|acq1002)
			[ $SN -lt 40 ] && rc=1;; 
	acq2006)
			[ $SN -le 10 ] && rc=1;;
	esac
	echo $rc
}

load_mb_sites() {
	KB=$1
	NS=$2
	echo 1>&2 "load.records:load_mb_sites $1 $2 $3"
	CPRAMS="UUT=${HOST},SITE=0"
	(
		cd ${KB}
		for counter in scount*
		do
			if [ "x${counter%_*}" = "xscount_CLK" ]; then
				SCMAX=$CTR28
				dt="1"
			else
				SCMAX=$CTR20
				dt="1"
				# dt=".1"   @@todo GOES MAD at 10Hz !
			fi
			CTPRAMS="${CPRAMS},CTRMAX=${SCMAX},DT=${dt},DTC=${dt}"
			PRAMS="${CTPRAMS},lname=${counter#scount_*},pname=${counter}"
			dblr '"db/counter.db","'${PRAMS}'"'
		done
	)

	case $MB_MODEL in
		kmcu*)
			;;
		acq2106*)
			thst="ZCLK"
			[ $(isRevA $MB_MODEL) -ne 0 ] && thst=""
			dblr '"db/acq2006clktree.db","UUT='${HOST},thst=${thst}'"'
			dblr '"db/acq2106mb.db","UUT='${HOST}',SPORT=S0,MB_SET_MIN=2000"';;		
		*)
			thst="ZCLK"
			[ $(isRevA $MB_MODEL) -ne 0 ] && thst=""
			dblr '"db/acq2006clktree.db","UUT='${HOST},thst=${thst}'"'
			dblr '"db/acq2006mb.db","UUT='${HOST}',SPORT=S0,MB_SET_MIN=4000000"';;
	esac
	[ -e /etc/acq400/0/transient ] && \
		dblr '"db/transient.db","UUT='${HOST},LIVESZ=${SIZE}',SPORT=SS,SPORTT=ST,NPORT=NP"'
	[ -e /etc/acq400/0/reboot ] && \
		dblr '"db/reboot.db","UUT='${HOST}',SPORT=S0"'
	if [ "$LOAD_INTMON" = "y" ]; then
		# uses 1% cpu for monitoring. Not default
		create_asyn_channel SI 127.0.0.1:4239			
		load_intmon
	fi
	dblr '"db/mb_common.db","UUT='${HOST}',SPORT=S0"'
	create_asyn_channel S0 127.0.0.1:4220
	create_asyn_channel NP 127.0.0.1:2226
	create_asyn_channel SS 127.0.0.1:4220
	create_asyn_channel ST 127.0.0.1:$(get-port-from-service acq4xx-transient-console)
}

toLower() {
	echo $* | tr '[:upper:]' '[:lower:]'
}

has_dsp_trg() {
	rc=0
	if [ -e /dev/acq400.0.knobs/fpga_rev ]; then
		rev=$(cat /dev/acq400.0.knobs/fpga_rev)
		case $1 in
		acq2106*)	[ $rev -ge 25 ] && rc=1;;
		acq100*)			[ $rev -ge 38 ] && rc=1;;
		esac
	fi
	echo $rc
}
load_mb_sync() {
	KB=$1 
	
# and acq2006 R2 with HDMI
	CPRAMS="UUT=${HOST},SITE=0,SPORT=S0"
	for FUN in SYNC TRG CLK
	do		 
		lprams="FUN=${FUN},fun=$(toLower ${FUN})"
		# d0
		zrst="EXT";	frst="nc"
		
		case $FUN in
		CLK)	nobt=2; onst="HDMI"; 	twst="HDMI";		
                case $MB_MODEL in
                acq2106*)
						zrst=SyncE
						thst="COMM_A";;
				*)
						thst="nc";;
				esac;;
		TRG)	if [ $(has_dsp_trg $MB_MODEL) -ne 0 ]; then
					nobt=3; zrst="EXT"; onst="HDMI_TRG"; twst="HOSTB"; thst="GPG0"; frst="DSP0"
				else
					nobt=2; onst="HDMI";    twst="HDMI_GPIO";  	thst="GPG0"
				fi;;
		SYNC)	nobt=1; onst="HDMI"; 	twst="nc";		thst="nc";;
		esac
		dblr '"db/sig_bus_x_cntrl.db","'${CPRAMS},${lprams},BIT=0,ZRST=${zrst},ONST=${onst},TWST=${twst},THST=${thst},FRST=${frst},NOBT=${nobt}'"'
		
		# d1
		case $FUN in
		TRG)	if [ $(has_dsp_trg $MB_MODEL) -ne 0 ]; then
					nobt=3; zrst="STRIG"; onst="HOSTA"; twst="HDMI_GPIO"; thst="GPG1"; frst="DSP1"
				else				
					case $MB_MODEL in
					acq2106*)
						nobt=2; zrst="STRIG"; onst="HOSTA"; twst="HOSTB"; 	thst="GPG1";;
					*)
						nobt=2; zrst="STRIG"; onst="HDMI";  twst="HDMI_GPIO"; thst="GPG1";;
					esac
				fi;;				
		SYNC) 	nobt=1; zrst="EXT";   onst="HDMI";  twst="nc"; thst="nc";;
		CLK)	nobt=2; onst="HDMI"; 	twst="HDMI";
				case $MB_MODEL in
				acq2106*)
					zrst="MCLK"; thst="COMM_B";;
				*)
					thst="nc";
				esac;;
		*) 		echo ERROR undefined FUN;;
#nobt=1; onst="HDMI";  twst="nc"; thst="nc";;
		esac
		dblr '"db/sig_bus_x_cntrl.db","'${CPRAMS},${lprams},BIT=1,ZRST=${zrst},ONST=${onst},TWST=${twst},THST=${thst},FRST=${frst},NOBT=${nobt}'"'
	done
	 
	if [ "$(cat /dev/acq400.0.knobs/module_role)" = "CLKOUT" ]; then
		disin=1; disout=0;
	else
		disin=0; disout=1;
	fi
	for FUN in GPIO SYNC TRG TRGOUT CLKOUT
	do
		disa=0,thvl=15
		case $FUN in 
		GPIO)	fprams="nobt=4,zrst=INPUT,src=EVT"
				lprams="FUN=${FUN},fun=$(toLower ${FUN}),disa=${disin}";;
		SYNC)	fprams="nobt=4,zrst=INPUT,src=SYNC"
				lprams="FUN=${FUN},fun=$(toLower ${FUN}),disa=${disin}";;
		TRG)	fprams="nobt=4,zrst=INPUT,src=TRG"
				lprams="FUN=${FUN},fun=$(toLower ${FUN}),disa=0";;
		TRGOUT)
				fprams="nobt=4,zrst=INPUT,src=TRG"
				lprams="FUN=${FUN},fun=gpio,disa=${disout}";;
		CLKOUT)
				thvl=10
				fprams="nobt=4,zrst=INPUT,onst=CLK0,twst=CLK1,thst=CLK2"
				lprams="FUN=${FUN},fun=sync,disa=${disout}";;
		esac
		case $FUN in
		CLKOUT)
			dblr '"db/fpctl.db","'${CPRAMS},${lprams},${fprams},thvl=${thvl}'"';;
		*)
			dblr '"db/fpctl2.db","'${CPRAMS},${lprams},${fprams}'"';;
		esac
	done
	dblr '"db/zclk.db","'${CPRAMS}'"'
	for FUN in SYNC TRG GPIO CLK
	do
		lprams="FUN=${FUN},fun=$(toLower ${FUN})"
		dblr '"db/sync_bus_out.db","'${CPRAMS},${lprams}'"'
		case $FUN in
		SYNC) twst=SYNC;;
		TRG)  twst=TRG;;
		GPIO) twst=EVNT;;
		CLK)  twst=CLK;;
		esac
		dblr '"db/sync_out_src_x.db","'${CPRAMS},${lprams},TWST=${twst}'"'		
	done
	for dx in 0 1 2 3 4 5 6 7
	do
			case $dx in 
			0|4)	hdmi_src="HDMI_CLK";;
			1|5)	hdmi_src="HDMI_GPIO";;
			2|6)    hdmi_src="HDMI_TRG";;
			3|7)    hdmi_src="HDMI_SYNC";;
			esac
			dblr '"db/sig_event_src.db","'${CPRAMS},BIT=${dx},HDMI=${hdmi_src}'"'
	done
	dblr '"db/sync_bus_data.db","'${CPRAMS}'"'
	
	echo 1>&2 "HAS_ACQ43X $HAS_ACQ43X"
	ACQ43X_SET_SAMPLE_RATE=${ACQ43X_SET_SAMPLE_RATE:-0}
	
	if [ $HAS_ACQ43X -ne 0 ] && [ $ACQ43X_SET_SAMPLE_RATE -ge 0 ]; then
			case $MB_MODEL in
			acq2106*)
				(
				echo "dbpf ${HOST}:SYS:CLK:FPMUX XCLK"
				echo "dbpf ${HOST}:SYS:FPCLK: 32768000"
				ssr=acq43x_setSampleRate
				echo "seq $ssr \"uut=${HOST},fin=SYS:FPCLK\""				
				) >>/tmp/st_post.cmd;;
			*)
				# ACQ1001, ACQ2006 REVA has no ZCLK (and hardly ever XCLK)
				if [ $(isRevA $MB_MODEL) -ne 0 ]; then
					ssr=acq43x_setSampleRateIntClk
				else
					ssr=acq43x_setSampleRate
				fi
				echo >>/tmp/st_post.cmd "seq $ssr \"uut=${HOST},fin=0:SIG:CLK_EXT:FREQ\"";;
			esac
	fi
	
	echo >>/tmp/st_post.cmd "seq setMB_ClockMonitor \"uut=${HOST}\""			
	echo >>/tmp/st_post.cmd "seq onSetTransient \"uut=${HOST}\""
	echo >>/tmp/st_post.cmd "seq autoRepeat \"uut=${HOST}\""
}

load_mb_stats()
{
	cprams="UUT=${HOST},SITE=0,SPORT=S0S,SIG=STAT"
	dblr '"db/blockcounter.db","'${cprams}'"'
	
	sprams="${cprams},CTRMAX=$CTR28,DT=1,DTC=1"
	for stat in GETS PUTS AXI64:W AXI64:F AXI64:C
	do
		dblr '"db/_counter.db","'${sprams},lname=${stat}'"'
	done
	create_asyn_channel S0S 127.0.0.1:4220	
}


cat - <<EOF
epicsEnvSet("STREAM_PROTOCOL_PATH","./protocols")
dbLoadDatabase("dbd/acq400ioc.dbd",0,0)
acq400ioc_registerRecordDeviceDriver(pdbbase)
dbLoadRecords("db/system.db","UUT=${HOST},ipaddrbis=$(./scripts/ifconfig_eth0 :),SPORT=S0")
EOF

KB=/dev/acq400.0.knobs



load_mb() {
	echo 1>&2 "load.records:load_mb"
	
	case $MB_MODEL in
		acq2106*)
				ns=6; mt=acq2106;;
		acq2006|acq2006b)
				ns=6; mt=acq2006;;
		acq1002)
				ns=2; mt=acq1001;;
		kmcu*)
				ns=2; mt=kmcu;;
		acq1014)
				source ./scripts/acq1014_init
				ns=1; mt=acq1001;;
		*)
				ns=1; mt=acq1001;;
	esac		
	
	load_mb_base $ns $mt
	load_mb_stats
	if [ -e $KB ]; then
		load_mb_sites $KB $ns $mt
		if [ -e /dev/acq400.0.knobs/sync_out_clk ]; then
			load_mb_sync $KB
		fi
		make_AI_subrate
	fi
	if [[ -e /dev/acq400.12.knobs || -e /dev/acq400.13.knobs ]]; then
		source /usr/local/epics/scripts/load.mgt400
		echo "seq mgtStopOnLinkDown \"uut=$(hostname)\"" >>/tmp/st_post.cmd
	fi	
}

load_mod_present()
{
	CPRAMS="UUT=${HOST},SITE=$1,PRESENT=$2"
	dblr '"db/mod_present.db","'${CPRAMS}'"'		
}
# execution starts here

cp protocols/continuous-400.proto protocols/continuous.proto
for site in 1 2 3 4 5 6
do
	ACQ400=/dev/acq400.$site
	if [ -e $ACQ400 ]; then
		if [ ! -L $ACQ400 ]; then
			[ $FIRST_SITE -eq -1 ] && FIRST_SITE=$site
			load_400 $site $ACQ400
		fi
		load_mod_present $site 1
	else
		load_mod_present $site 0
	fi
done

load_mb


cat /tmp/gains_last

for sitepath in /dev/sites/*
do
	if [ -d $sitepath ]; then
		file=$sitepath/details	
		FRU_PROD_NAME=nothing
		site=$(basename $sitepath)
		source $file
		if [ "x$FRU_PROD_NAME" = "xAO421FMC" -o \
		     "x$FRU_PROD_NAME" = "xAO421ELF"      ]; then
			
	 		load_421 $site
	 	fi	 	
	 	LOAD_MOD=/usr/local/epics/scripts/load.${FRU_PROD_NAME// /}
	 	if [ -e $LOAD_MOD ]; then
			echo 1>&2 "load.records:$LOAD_MOD $HOST $site"
	 		$LOAD_MOD $HOST $site
		fi
	fi
done

dblr '"db/mirror.db","UUT='${HOST}'"'

for file in /usr/local/epics/init.d/*init*
do
	if [ -x $file ]; then
		echo 1>&2 "execute extension $file"
		$file
	elif [ -e $file ]; then
		echo 1>&2 "source extension $file"
		source $file
	fi 
done

if [ "x$IOC_PREINIT" != "x" ]; then
	echo 1>&2 "load.records:$IOC_PREINIT"
	if [ -e $IOC_PREINIT ]; then
		source $IOC_PREINIT
	fi
fi
if [ -e "/tmp/st_pre.cmd" ]; then
	cat /tmp/st_pre.cmd
fi

if [ -e "/mnt/local/sysconfig/site-aliases.db" ]; then
		dblr '"/mnt/local/sysconfig/site-aliases.db","UUT='${HOST}'"'
fi


cat - <<EOF
dbLoadRecords("db/local-aliases.db","UUT=${HOST}")
iocInit()
EOF

if [ -e "/tmp/st_post.cmd" ]; then
	cat /tmp/st_post.cmd
fi

if [ -x /usr/local/epics/scripts/${MB_MODEL}_init.sh ]; then
		/usr/local/epics/scripts/${MB_MODEL}_init.sh create
fi
case $MB_MODEL in
acq2006)	clk=XCLK;;
acq1001|acq1002)
		if [ $(cat /dev/gpio/BV2) -eq 0 ]; then
				clk=ZCLK;
		else
				clk=XCLK;
		fi;;
*)		clk=ZCLK;;
esac

# WORKTODO : what was this
#if [ "$(cat /dev/acq400.0.knobs/module_role)" = "CLKOUT" ]; then
#		dbpf acq1001_109:0:SIG:FP:
#fi

case $MB_MODEL in
acq2106*)	
	;;
acq10*)
	echo "dbpf $HOST:SYS:CLK:FPMUX $clk"
	if [ "x$HAS_ACQ43X" != "x" ] && [ $HAS_ACQ43X -eq 1 ] && [ $ACQ43X_SET_SAMPLE_RATE -gt 1 ]; then
		echo "dbpf $HOST:1:ACQ43X_SAMPLE_RATE $ACQ43X_SET_SAMPLE_RATE"
	fi;;
*)
	;;
esac

if [ "x$IOC_POSTINIT" != "x" ]; then
	echo 1>&2 "load.records:$IOC_POSTINIT"
	if [ -e $IOC_POSTINIT ]; then
		source $IOC_POSTINIT
	fi
fi

IOC_READY_DELAY=${IOC_READY_DELAY:-3}

echo 'dbl > /tmp/records.dbl'
echo 'seqShow > /tmp/records.dbl.done'
echo "dbpf ${HOST}:LIVE:PREPCT 50"
#echo "dbpf ${HOST}:IOC_READY 1"  >> /tmp/st_final.cmd
echo >> /tmp/st_final.cmd \
"seq on_delay \"pv=${HOST}:IOC_READY,val=1,delay=$IOC_READY_DELAY,priority=0\"" 
echo 1>&2 "load.records 99"
