Terminator = LF;
ExtraInput = Ignore;

setMB {
# fin kHz, fout (setpoint)
	out "mb_clk %d %(A)d";
}

setMB_Hz {
# fin Hz, fout (setpoint)
	out "mb_clk %e %(A)e";
}
setSPAD {
# EN,LEN,DI4/32
	out "spad %i,%(\$1)i,%(\$2)i";
}

getSPAD {
# EN,LEN,DI4/32
	out "spad";
	in "%d,%(\$1)d,%(\$2)d";
}

# Qstats=BS_EMPTY, BS_FILLING, BS_FULL, BS_FULL_APP, DROPS
# in "%*d,%*d,%*d,%*d,%*d";
getQstatsEmpty {
	out "Qstats";
	in "%d,%(\$1:FILLING)d,%(\$1:FULL)d,%(\$1:FULL_APP)d,%(\$1:DROPS)d";
}

getQstatsFilling {
	in "%*d,%d,%*d,%*d,%*d";
}

getQstatsFull {
	in "%*d,%*d,%d,%*d,%*d";
}

getQstatsFullApp {
	in "%*d,%*d,%*d,%d,%*d";
}

getQstatsDrops {
	in "%*d,%*d,%*d,%*d,%d";
}

# transient
# transient PRE=1000 POST=1000 OSAM=1 SOFT_TRIGGER=1

setTransient {
	out "transient PRE=%(\$1:PRE)d POST=%(\$1:POST)d OSAM=%(\$1:OSAM)d SOFT_TRIGGER=%(\$1:SOFT_TRIGGER)d";
	in;
}

setContinuous {
	out "streamtonowhered %s";
}

setArm {
	out "set_arm";
	in;
}

setAbort {
	out "set_abort";
	in;
}

getState {
	out "state";
	in "%d %(\$1:PRE)d %(\$1:POST)d %(\$1:TOTSAM)d";
}

setReboot {
	out "reboot=%d";
}

getSwVersion {
	out "software_version";
	in "%39c";
}

getFpgaVersion {
	out "fpga_version";
	in "%39c";
}

setPre {
	out "live_pre %d";
}

setPost {
	out "live_post %d";
}

get_live_mode {
	out "live_mode";
	in "%d";
}

get_gpg_state {
	out "gpg_debug";
	in "%d,%(\$1:0:GPG:DBG:PTR)d,%(\$1:0:GPG:DBG:CTR)d";
}

get_gpg_enable {
	out "gpg_enable";
	in "%d";
}
set_gpg_enable {
	out "gpg_enable=%d";
}

get_gpg_mode {
	out "gpg_mode";
	in "%d";
}
set_gpg_mode {
	out "gpg_mode=%d";
}

get_gpg_top {
	out "gpg_top_count";
	in "%d";
}

get_pulse_def {
	out "pulse_def";
	in "%39c";
}
set_fpctl {
	out "fpctl_\$1=%(RVAL)x";
}

get_fpctl {
	out "fpctl_\$1";
	in "%(RVAL)x";
}

set_zclk_src {
	out "zclk_sel=%(RVAL)x";
}

get_zclk_src {
	out "zclk_sel";
	in "%(RVAL)x";
}

getSitelist {
	out "SITELIST";
	in "%s";
}

setFitRtmTranslenBuffer {
	out "fit_rtm_translen_to_buffer %d";
}

