Terminator = LF;
ExtraInput = Ignore;

#4 5000 50000 86016 19
#state pre post elapsed demux

read_state 	{ in "STX %d %*d %*d %*d %*d"; }

read_pre 	{ in "STX %*d %d %*d %*d %*d"; }

read_post 	{ in "STX %*d %*d %d %*d %*d"; }

read_elapsed 	{ in "STX %*d %*d %*d %d %*d"; }

read_demux 	{ in "STX %*d %*d %*d %*d %d"; }

read_error	{ in "ERROR %s"; }

#findEvent=2,89,111

findEventStatus { in "findEvent=%d,%*d,%*d"; }
findEventCurBuf { in "findEvent=%*d,%d,%*d"; }
findEventTotBuf { in "findEvent=%*d,%*d,%d"; }

getRawDataSize { in "DATA_SIZE=%d,%*d"; }
getChDataSize  { in "DATA_SIZE=%*d,%d"; }


mdsPutCh	{ in "mdsPutCh %d"; }


# transient
# transient PRE=1000 POST=1000 OSAM=1 SOFT_TRIGGER=1

setTransient {
	out "transient PRE=%(\$1:PRE)d POST=%(\$1:POST)d OSAM=%(\$1:OSAM)d SOFT_TRIGGER=%(\$1:SOFT_TRIGGER)d";
	in;
}

setTransientDemux {
	out "transient DEMUX=%d";
	in;
}

# PRE=0 POST=100000 OSAM=1 DEMUX=1 SOFT_TRIGGER=0
getTransientPre {
	out "transient";
	in "PRE=%d POST=%*d OSAM=%*d DEMUX=%*d SOFT_TRIGGER=%*d"
}

getTransientPost {
	in "PRE=%*d POST=%d OSAM=%*d DEMUX=%*d SOFT_TRIGGER=%*d"
}

getTransientOsam {
	in "PRE=%*d POST=%*d OSAM=%d DEMUX=%*d SOFT_TRIGGER=%*d"
}

getTransientDemux {
	in "PRE=%*d POST=%*d OSAM=%*d DEMUX=%d SOFT_TRIGGER=%*d"
}

getTransientSoftTrigger {
	in "PRE=%*d POST=%*d OSAM=%*d DEMUX=%*d SOFT_TRIGGER=%d"
}

