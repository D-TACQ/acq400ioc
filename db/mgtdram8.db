# records for MGTDRAM : BLT : Big Long Transient

record(longout, "${UUT}:MODE:BLT:POST") {
	field(DTYP, "Soft Channel")
	field(DESC, "set transient post-samples")
	field(EGU,  "Samples")
	field(LOPR, "0")
	field(HOPR, "100000000")
	field(FLNK, "${UUT}:MODE:BLT:BUFFERS:c")
}

record(calcout, "${UUT}:MODE:BLT:BUFFERS:c") {
	field(INPA, "${UUT}:MODE:BLT:POST")
	field(INPB, "${UUT}:0:SSB")
	field(INPC, "0x400000")
	field(CALC, "A*B/C + 1")
	field(DESC, "set transient buffers")
	field(EGU,  "B4M")
	field(OUT,  "${UUT}:MODE:BLT:BUFFERS PP")
	field(OOPT, "Every Time")
	field(DOPT, "Use CALC")	
}

record(longout, "${UUT}:MODE:BLT:BUFFERS") {
	field(DTYP, "Soft Channel")
	field(DRVL, "100")
	field(DRVH, "2000")
	field(FLNK, "${UUT}:MODE:BLT:BUFFERS:M")
}

record(calcout, "${UUT}:MODE:BLT:BUFFERS:M") {
	field(INPA, "${UUT}:MODE:BLT:BUFFERS")
	field(INPB, "${UUT}:0:NCHAN")
	field(CALC, "C := B%12==0? 12: 16; min(A%C==0? A: (1+floor(A/C))*C, 2048)")
#                    12345678901234567890123456789012345678901234567890123456789012345678901234567890
	field(OUT,  "${UUT}:MODE:BLT:BUFFERS:w PP")
	field(OOPT, "Every Time")
	field(DOPT, "Use CALC")
	field(DESC, "Round up offload buffers modulus")
}

record(longout, "${UUT}:MODE:BLT:BUFFERS:w") {
	field(DTYP, "stream")	
	field(OUT, "@mgtdram8.proto set_mgt_run_shot ${SPORT}")
	field(DRVL, "100")
	field(DRVH, "2048")
}

record(bo, "${UUT}:MODE:BLT:SET_ARM") {
	field(DTYP, "Soft Channel")
	field(OUT,  "@mgtdram8.proto set_mgt_arm ${SRUN}")
	field(DISV, "1")
	field(SDIS, "${UUT}:MODE:BLT:SET_ARM")
}

record(bo, "${UUT}:MODE:BLT:SET_ARM:w") {
	field(DTYP, "stream")
	field(OUT,  "@mgtdram8.proto set_mgt_arm ${SRUN}")	
}


record(bo, "${UUT}:MODE:BLT:SET_ABORT") {
	field(DTYP, "Soft Channel")
	field(DESC, "abort BLT capture")
	field(VAL,  "0")
	field(PINI, "YES")	
	field(FLNK,  "${UUT}:MODE:TRANSIENT:SET_ABORT:w PP")
}

record(bo, "${UUT}:MODE:BLT:SET_ABORT:w") {
	field(DTYP, "stream")
	field(DESC, "abort BLT capture")
	field(OUT,  "@mgtdram8.proto set_mgt_abort ${SPORT}")
	field(VAL,  "0")
	field(PINI, "YES")	
}

record(mbbi, "${UUT}:MODE:BLT:ACT:MGTSTATE") {
	field(DTYP, "stream")
	field(SCAN, "I/O Intr")
	field(INP,  "@mgtdram8.proto mgt_get_mgt_state ${SMON}")
	field(NOBT, "2")
	field(ZRST, "NONE")
	field(ONST, "PREARM")
	field(TWST, "BUSY")
	field(THST, "IDLE")
	field(FLNK, "${UUT}:MODE:BLT:ACT:STATE:c")
	
}

record(calcout, "${UUT}:MODE:BLT:ACT:STATE:c") {
	field(INPA, "${UUT}:MODE:BLT:ACT:MGTSTATE")
	field(INPB, "${UUT}:1:SIG:SAMPLE_COUNT:COUNT")
	field(CALC, "A==2&&B>0? 2: A==2 || A==1? 1: 0")
	field(OUT,  "${UUT}:MODE:BLT:ACT:STATE PP")
	field(OOPT, "Every Time")
	field(DOPT, "Use CALC")		
}
	
record(mbbi, "${UUT}:MODE:BLT:ACT:STATE") {
	field(DTYP, "Soft Channel")
	field(NOBT, "2")
	field(ZRST, "IDLE")
	field(ONST, "ARM")
	field(TWST, "RUN")
}

record(longin, "${UUT}:MODE:BLT:ACT:SAMPLES") {
	field(DTYP, "stream")
	field(SCAN, "I/O Intr")
	field(INP,  "@mgtdram8.proto mgt_get_mgt_samples ${SMON}")
	field(LOPR, "0")
	field(HOPR, "1000000000")
	field(VAL,  "0")
}


record(calc, "${UUT}:A:SIG:MGT:PUSH:BYTES:COUNT") {
	# C is scale
	field(INPC, "16")
}

