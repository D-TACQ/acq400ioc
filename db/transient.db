record(longout, "${UUT}:MODE:TRANSIENT") {
	field(DTYP, "stream")	
	field(DESC, "set transient samples")
	field(EGU,  "Samples")
	field(LOPR, "0")
	field(HOPR, "1")	
	field(OUT,  "@mb.proto setTransient(${UUT}:MODE:TRANSIENT) ${SPORT}")
}

record(longout, "${UUT}:MODE:TRANSIENT:PRE") {
	field(DTYP, "Soft Channel")
	field(DESC, "set transient pre-samples")
	field(EGU,  "Samples")
	field(LOPR, "0")
	field(HOPR, "100000000")
}

record(longout, "${UUT}:MODE:TRANSIENT:POST") {
	field(DTYP, "Soft Channel")
	field(DESC, "set transient post-samples")
	field(EGU,  "Samples")
	field(LOPR, "0")
	field(HOPR, "100000000")
}

record(longout, "${UUT}:MODE:TRANSIENT:OSAM") {
	field(DTYP, "Soft Channel")
	field(DESC, "subrate oversample ratio")
	field(EGU,  "Samples")
	field(LOPR, "0")
	field(HOPR, "256")
}

record(longout, "${UUT}:MODE:TRANSIENT:SOFT_TRIGGER") {
	field(DTYP, "Soft Channel")
	field(DESC, "set transient pre-samples")
	field(EGU,  "Samples")
	field(LOPR, "0")
	field(HOPR, "1")
}

record(longout, "${UUT}:MODE:TRANSIENT:SET_ARM") {
	field(DTYP, "stream")	
	field(DESC, "start transient capture")
	field(EGU,  "Samples")
	field(LOPR, "0")
	field(HOPR, "1")	
	field(OUT,  "@mb.proto setArm ${SPORT}")
}

record(longout, "${UUT}:MODE:TRANSIENT:SET_ABORT") {
	field(DTYP, "stream")	
	field(DESC, "abort transient capture")
	field(EGU,  "Samples")
	field(LOPR, "0")
	field(HOPR, "1")	
	field(OUT,  "@mb.proto setAbort ${SPORT}")
}

record(mbbi, "${UUT}:MODE:TRANS_ACT:STATE") {
	field(DTYP, "stream")
	field(DESC, "transient actual state")
	field(NOBT, "3")
	field(ZRST, "IDLE")
	field(ONST, "ARM")
	field(TWST, "RUN_PRE")
	field(THST, "RUN_POST")
	field(FRST, "POST_PROCESS")
	field(INP,  "@mb.proto getState(${UUT}:MODE:TRANS_ACT) ${SPORT}")
	field(SCAN, "1 second")
	field(FLNK, "${UUT}:MODE:TRANS_ACT:STATE_NOT_IDLE")
}

record(calc, "${UUT}:MODE:TRANS_ACT:STATE_NOT_IDLE") {
	field(INPA, "${UUT}:MODE:TRANS_ACT:STATE")
	field(CALC, "A == 0? 0: 1")
}

record(longin, "${UUT}:MODE:TRANS_ACT:PRE") {
	field(DTYP, "Soft Channel")
}

record(longin, "${UUT}:MODE:TRANS_ACT:POST") {
	field(DTYP, "Soft Channel")
}

record(longin, "${UUT}:MODE:TRANS_ACT:TOTSAM") {
	field(DTYP, "Soft Channel")
}

record (longin, "${UUT}:SHOT_COMPLETE") {
	field(DTYP, "longinAcqHost")
	field(INP, "@/etc/acq400/0/shot_complete")
	field(SCAN, "1 second")
	field(PINI, "YES")		
}

record(longout, "${UUT}:MODE:TRANSIENT:REPEAT") {
	field(DTYP, "Soft Channel")
	field(DESC, "auto repeat N, decr to zero -1=forever")
	field(HOPR, "99999")
	field(LOPR, "-1")
}

record(longout, "${UUT}:MODE:TRANSIENT:DELAYMS") {
	field(DTYP, "Soft Channel")
	field(DESC, "delay before auto restart")
	field(VAL,  "1000")
}

record(longin, "${UUT}:TRANSIENT:ACT:STATE") {
	field(DTYP, "stream")
	field(INP,  "@transient.proto read_state ${SPORTT}")
	field(SCAN, "I/O Intr")
}
record(longin, "${UUT}:TRANSIENT:ACT:PRE") {
	field(DTYP, "stream")
	field(INP,  "@transient.proto read_pre ${SPORTT}")
	field(SCAN, "I/O Intr")
}
record(longin, "${UUT}:TRANSIENT:ACT:POST") {
	field(DTYP, "stream")
	field(INP,  "@transient.proto read_post ${SPORTT}")
	field(SCAN, "I/O Intr")
}
record(longin, "${UUT}:TRANSIENT:ACT:ELAPSED") {
	field(DTYP, "stream")
	field(INP,  "@transient.proto read_elapsed ${SPORTT}")
	field(SCAN, "I/O Intr")
}
record(longin, "${UUT}:TRANSIENT:ACT:DEMUX") {
	field(DTYP, "stream")
	field(INP,  "@transient.proto read_demux ${SPORTT}")
	field(SCAN, "I/O Intr")
}
record(stringin, "${UUT}:TRANSIENT:ACT:ERROR") {
	field(DTYP, "stream")
	field(INP,  "@transient.proto read_error ${SPORTT}")
	field(SCAN, "I/O Intr")
}

