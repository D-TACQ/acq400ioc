# ST: 2225
# NP: 2226
# SS: 4220
# SC: 4220, dedicated channel
record(bo, "${UUT}:MODE:CONTINUOUS") {
	field(DTYP, "Soft Channel")
	field(DESC, "continuous stream start/stop")
	field(ZNAM, "stop")
	field(ONAM, "start")
	field(FLNK, "${UUT}:MODE:CONTINUOUS:c")
}

record(calcout, "${UUT}:MODE:CONTINUOUS:c") {
	field(INPA, "${UUT}:MODE:CONTINUOUS")
	field(CALC, "A")
	field(OUT, "${UUT}:MODE:CONTINUOUS:w PP")
	field(DOPT, "Use CALC")
	field(OOPT, "On Change")
}

record(bo, "${UUT}:MODE:CONTINUOUS:w") {
	field(DTYP, "stream")
	field(DESC, "continuous stream start/stop")
	field(ZNAM, "stop")
	field(ONAM, "start")
	field(OUT,  "@mb.proto setContinuous ${SPORT}")
}

record(mbbi, "${UUT}:MODE:CONTINUOUS:STATE") {
	field(DTYP, "stream")
	field(INP,  "@mb2.proto getCState(${UUT}:MODE:CONTINUOUS:SC) ${SPC}")
	field(SCAN, ".2 second")
#	field(SDIS, "${UUT}:MODE:CONTINUOUS")
#	field(DISV, "0")
	field(NOBT, "3")
	field(ZRST, "IDLE")
	field(ONST, "ARM")
	field(TWST, "RUN")
	field(THST, "RUN2")
	field(FRST, "POST_PROCESS")
	field(FVST, "CLEANUP")
}

record(longin, "${UUT}:MODE:CONTINUOUS:SC") {
	field(DTYP, "Soft Channel")
	field(DESC, "samples streamed so far")
}


record(stringin, "${UUT}:MODE:CONTINUOUS:STATUS") {
	field(DTYP, "stream")
	field(INP,  "@continuous.proto getContinuousStatus ${NPORT}")
	field(SCAN, "I/O Intr")
	field(SDIS, "${UUT}:MODE:CONTINUOUS")
	field(DISV, "0")
}
record(bo, "${UUT}:MODE:TRANSIENT") {
	field(ONAM, "ON")
	field(ZNAM, "OFF")
	field(DTYP, "Soft Channel")
	field(DESC, "enable transient")
	field(VAL,  "0")
	field(PINI, "YES")
	field(FLNK, "${UUT}:MODE:TRANSIENT:set")
	field(HIGH, "0.1")
}

record(calcout, "${UUT}:MODE:TRANSIENT:set") {
	field(INPA, "${UUT}:MODE:TRANSIENT")
	field(CALC, "A")
	field(OOPT, "Transition To Non-zero")
	field(DOPT, "Use CALC")
	field(OUT,  "${UUT}:MODE:TRANSIENT:TRANSIENT:w PP")
}

record(bo, "${UUT}:MODE:TRANSIENT:TRANSIENT:w") {
	field(ONAM, "ON")
	field(ZNAM, "OFF")
	field(DESC, "$placeholder")
	field(DTYP, "stream")
	field(OUT,  "@mb.proto setTransient(${UUT}:MODE:TRANSIENT) ${SPORT}")
}

record(longout, "${UUT}:MODE:TRANSIENT:PRE") {
	field(DTYP, "Soft Channel")
	field(DESC, "set transient pre-samples")
	field(EGU,  "Samples")
	field(LOPR, "0")
	field(HOPR, "100000000")
}

record(longout, "${UUT}:MODE:TRANSIENT:POST") {
	field(DTYP, "Soft Channel")
	field(DESC, "set transient post-samples")
	field(EGU,  "Samples")
	field(LOPR, "0")
	field(HOPR, "100000000")
}

record(longout, "${UUT}:MODE:TRANSIENT:OSAM") {
	field(DTYP, "Soft Channel")
	field(DESC, "subrate oversample ratio")
	field(EGU,  "Samples")
	field(LOPR, "0")
	field(VAL,  "1")
	field(PINI, "YES")
	field(HOPR, "256")
}

record(longout, "${UUT}:MODE:TRANSIENT:SOFT_TRIGGER") {
	field(DTYP, "Soft Channel")
	field(DESC, "auto soft trigger after ARM")
	field(EGU,  "Samples")
	field(VAL,  "1")
	field(PINI, "YES")	
	field(LOPR, "0")
	field(HOPR, "1")
}

record(bo, "${UUT}:MODE:TRANSIENT:SET_ARM") {
	field(ONAM, "ON")
	field(ZNAM, "OFF")
	field(DTYP, "Soft Channel")
	field(DESC, "start transient capture")
	field(VAL,  "0")
	field(PINI, "YES")
	field(FLNK, "${UUT}:MODE:TRANSIENT:SET_ARM:set")	

	field(SDIS, "${UUT}:MODE:CONTINUOUS")
	field(DISV, "1")	
}

record(calcout, "${UUT}:MODE:TRANSIENT:SET_ARM:set") {
	field(DESC, "SET on demand && IDLE")
	field(INPA,  "${UUT}:MODE:TRANSIENT:SET_ARM")
	field(INPB,  "${UUT}:MODE:TRANS_ACT:STATE")
	field(CALC, "A && B==0")
	field(OOPT, "Transition To Non-zero")
	field(DOPT, "Use CALC")
	field(OUT,  "${UUT}:MODE:TRANSIENT:SET_ARM:w PP")
}


record(bo, "${UUT}:MODE:TRANSIENT:SET_ARM:w") {
	field(ONAM, "ON")
	field(ZNAM, "OFF")
	field(DESC, "$placeholder")
	field(DTYP, "stream")
	field(OUT,  "@mb.proto setArm ${SPORT}")
	field(FLNK, "${UUT}:1:DT PP")
}

record(calcout, "${UUT}:MODE:TRANSIENT:SET_ARM:clr") {
	field(DESC, "CLR on demand && !IDLE")
	field(INPA,  "${UUT}:MODE:TRANSIENT:SET_ARM")
	field(INPB,  "${UUT}:MODE:TRANS_ACT:STATE")
	field(CALC, "A && B!=0")
	#field(OOPT, "Transition To Non-zero")
	field(OOPT, "Every Time")
	field(DOPT, "Use OCAL")
	field(OCAL, "0")
	field(OUT,  "${UUT}:MODE:TRANSIENT:SET_ARM PP")
	field(FLNK, "${UUT}:MODE:TRANSIENT:SET_ABORT:set")
}


record(bo, "${UUT}:MODE:TRANSIENT:SET_ABORT") {
	field(ONAM, "ON")
	field(ZNAM, "OFF")
	field(DTYP, "Soft Channel")
	field(DESC, "abort transient capture")
	field(VAL,  "0")
	field(PINI, "YES")	
	field(FLNK,  "${UUT}:MODE:TRANSIENT:SET_ABORT:set")	
}

record(calcout, "${UUT}:MODE:TRANSIENT:SET_ABORT:set") {
	field(INPA,  "${UUT}:MODE:TRANSIENT:SET_ABORT")
	field(INPB,  "${UUT}:MODE:TRANSIENT:SET_ARM")
	field(CALC, "A && !B")
	field(OOPT, "Transition To Non-zero")
	field(DOPT, "Use CALC")
	field(OUT,  "${UUT}:MODE:TRANSIENT:SET_ABORT:w PP")
}

record(bo, "${UUT}:MODE:TRANSIENT:SET_ABORT:w") {
	field(ONAM, "ON")
	field(ZNAM, "OFF")
	field(DESC, "$placeholder")
	field(DTYP, "stream")
	field(OUT,  "@mb.proto setAbort ${SPORT}")
	field(FLNK, "${UUT}:MODE:TRANSIENT:SET_ABORT:clr")
}

record(calcout, "${UUT}:MODE:TRANSIENT:SET_ABORT:clr") {
	field(OOPT, "Every Time")
	field(DOPT, "Use OCAL")
	field(OCAL, "0")
	field(OUT,  "${UUT}:MODE:TRANSIENT:SET_ABORT PP")
}

record(bo, "${UUT}:SIG:SOFT_TRIGGER") {
	field(ONAM, "ON")
	field(ZNAM, "OFF")
	field(DTYP, "Soft Channel")
	field(DESC, "set soft trigger")
	field(VAL,  "0")
	field(PINI, "YES")	
	field(FLNK,  "${UUT}:SIG:SOFT_TRIGGER:set")
	field(HIGH, "0.1")
}

record(calcout, "${UUT}:SIG:SOFT_TRIGGER:set") {
	field(INPA,  "${UUT}:SIG:SOFT_TRIGGER")
	field(CALC, "A")
	field(OOPT, "Transition To Non-zero")
	field(DOPT, "Use CALC")
	field(OUT,  "${UUT}:SIG:SOFT_TRIGGER:w PP")
}


record(longout, "${UUT}:SIG:SOFT_TRIGGER:w") {
	field(DTYP, "stream")
	field(OUT,  "@mb.proto setSoftTrigger ${SPORT}")
	field(FLNK, "${UUT}:SIG:SOFT_TRIGGER:clr")
	field(DRVL, "0")
	field(DRVH, "500")
}

record(bo, "${UUT}:SIG:SOFT_TRIGGER:clr" ) {
	field(ONAM, "ON")
	field(ZNAM, "OFF")
	field(DESC, "Clears SOFT_TRIGGER")
	field(DTYP, "Soft Channel")
	field(OUT,  "${UUT}:SIG:SOFT_TRIGGER")
	field(DOL,  "0")	
}

record(mbbi, "${UUT}:MODE:TRANS_ACT:STATE") {
	field(DTYP, "stream")
	field(DESC, "transient actual state")
	field(NOBT, "3")
	field(ZRST, "IDLE")
	field(ONST, "ARM")
	field(TWST, "RUN_PRE")
	field(THST, "RUN_POST")
	field(FRST, "POST_PROCESS")
	field(FVST, "CLEANUP")
	field(INP,  "@transient.proto read_state ${SPORTT}")
	field(SCAN, "I/O Intr")		
	field(FLNK, "${UUT}:MODE:TRANS_ACT:STATE_f")
}



record(fanout, "${UUT}:MODE:TRANS_ACT:STATE_f") {
	field(SELM, "All")
	field(LNK1, "${UUT}:MODE:TRANS_ACT:STATE_NOT_IDLE")
	field(LNK2, "${UUT}:MODE:TRANSIENT:SET_ARM:clr")
}

record(calc, "${UUT}:MODE:TRANS_ACT:STATE_NOT_IDLE") {
	field(INPA, "${UUT}:MODE:TRANS_ACT:STATE")
	field(CALC, "A == 0? 0: 1")
	field(FLNK, "${UUT}:MODE:TRANS_ACT:STATE_NOT_IDLEf")
}
record(fanout, "${UUT}:MODE:TRANS_ACT:STATE_NOT_IDLEf") {
	field(SELM, "All")
	field(LNK1, "${UUT}:1:AI:WF:TB")
	field(LNK2, "${UUT}:1:AI:TW:TB")		
}



record(longin, "${UUT}:MODE:TRANS_ACT:PRE") {	
	field(DTYP, "stream")
	field(INP,  "@transient.proto read_pre ${SPORTT}")
	field(SCAN, "I/O Intr")	
}

record(longin, "${UUT}:MODE:TRANS_ACT:POST") {
	field(DTYP, "stream")
	field(INP,  "@transient.proto read_post ${SPORTT}")
	field(SCAN, "I/O Intr")
}

record(longin, "${UUT}:MODE:TRANS_ACT:TOTSAM") {	
	field(DTYP, "stream")
	field(INP,  "@transient.proto read_elapsed ${SPORTT}")
	field(SCAN, "I/O Intr")	
}

record(longin, "${UUT}:MODE:TRANS_ACT:RAW:DSZ") {
	field(DTYP, "stream")
	field(DESC, "RAW datasize (bytes)")
	field(INP,  "@transient.proto getRawDataSize ${SPORTT}")
	field(SCAN, "I/O Intr")
	field(FLNK, "${UUT}:MODE:TRANS_ACT:RAW:DATA_VALID")
}

record(calc, "${UUT}:MODE:TRANS_ACT:RAW:DATA_VALID") {
	field(INPA, "${UUT}:MODE:TRANS_ACT:RAW:DSZ")
	field(CALC, "A != 0")
}


record(longin, "${UUT}:MODE:TRANS_ACT:CH:DSZ") {
	field(DTYP, "stream")
	field(DESC, "CHannel datasize (bytes)")
	field(INP,  "@transient.proto getChDataSize ${SPORTT}")
	field(SCAN, "I/O Intr")
	field(FLNK, "${UUT}:MODE:TRANS_ACT:CH:DATA_VALID")
}

record(calc, "${UUT}:MODE:TRANS_ACT:CH:DATA_VALID") {
	field(INPA, "${UUT}:MODE:TRANS_ACT:CH:DSZ")
	field(CALC, "A != 0")
}

record (longin, "${UUT}:SHOT_COMPLETE") {
	field(DTYP, "longinAcqHost")
	field(INP, "@/etc/acq400/0/shot_complete")
	field(SCAN, "1 second")
	field(PINI, "YES")		
}

record(longout, "${UUT}:MODE:TRANSIENT:REPEAT") {
	field(DTYP, "Soft Channel")
	field(DESC, "auto repeat N, decr to zero -1=forever")
	field(HOPR, "99999")
	field(LOPR, "-1")
}

record(longout, "${UUT}:MODE:TRANSIENT:DELAYMS") {
	field(DTYP, "Soft Channel")
	field(DESC, "delay before auto restart")
	field(VAL,  "1000")
}

record(longin, "${UUT}:TRANSIENT:ACT:DEMUX") {
	field(DTYP, "stream")
	field(INP,  "@transient.proto read_demux ${SPORTT}")
	field(SCAN, "I/O Intr")
}
record(stringin, "${UUT}:TRANSIENT:ACT:ERROR") {
	field(DTYP, "stream")
	field(INP,  "@transient.proto read_error ${SPORTT}")
	field(SCAN, "I/O Intr")
}

record(longout, "${UUT}:LIVE:LEN" ){
	field(DTYP, "Soft Channel")
	field(VAL,  "${LIVESZ}")
	field(DESC,  "length of live plot WF (fixed)")
	field(PINI,  "YES")
}

record(longout, "${UUT}:LIVE:PREPCT") {
	field(DTYP, "Soft Channel")
	field(SCAN, "Passive")
	field(DESC, "delay samples")
	field(FLNK, "${UUT}:LIVE:delay_calc_pre")
	field(PINI,  "YES")
	field(DRVL,  "0")
	field(LOPR,  "0")
	field(VAL,   "0")
	field(DRVH,  "100")
	field(HOPR,  "100")
}

record(calcout, "${UUT}:LIVE:delay_calc_pre") {
	field(INPA,  "${UUT}:LIVE:LEN")
	field(INPB,  "${UUT}:LIVE:PREPCT")
	field(CALC,  "B/100*A")
	field(FLNK,  "${UUT}:LIVE:PRE")
}

record(longout, "${UUT}:LIVE:PRE") {
	field(DTYP, "stream")
	field(DOL,   "${UUT}:LIVE:delay_calc_pre")
	field(OMSL,  "closed_loop")
	field(OUT,  "@mb.proto setPre ${SPORT}")
	field(DESC, "delay samples")
	field(FLNK, "${UUT}:LIVE:delay_calc_post")
	field(PINI,  "YES")
}

record(calcout, "${UUT}:LIVE:delay_calc_post") {
	field(INPA,  "${UUT}:LIVE:LEN")
	field(INPB,  "${UUT}:LIVE:PREPCT")
	field(CALC,  "(1-B/100)*A")
	field(FLNK,  "${UUT}:LIVE:POST")
}

record(longout, "${UUT}:LIVE:POST") {
	field(DTYP,  "stream")
	field(DOL,   "${UUT}:LIVE:delay_calc_post")
	field(OMSL,  "closed_loop")
	field(OUT,   "@mb.proto setPost ${SPORT}")
	field(PINI,  "YES")
	field(FLNK,   "${UUT}:1:AI:WF:TB")
	# @@todo other sites are out in the cold
}

record(mbbi, "${UUT}:LIVE:MODE") {
	field(DTYP,  "stream")
	field(INP,  "@mb.proto get_live_mode ${SPORT}")
	field(SCAN, "5 second")
	field(PINI, "YES")
	field(NOBT,  "2")	
	field(ZRST, "off")
	field(ONST, "free-run")
	field(TWST, "pre-post")	
}

record(longin, "${UUT}:0:SSB") {
	field(DTYP, "stream")
	field(INP,  "@mb.proto get_ssb ${SPORT}")
	field(PINI, "YES")
	field(DESC, "aggregator sample size bytes")
	field(SCAN, "5 second")
}

# append existing record
# on transition to !=0, wait 2s for the count to settle 
# then trigger DT because we may want to recalculate.
# of course if XDT is set, we get that rather than the measurement
# either way, it's good

record(calc, "${UUT}:1:SIG:sample_count:FREQ") {
	field(FLNK, "${UUT}:1:SIG:sample_count:FREQ:nzc")
}

record(calcout, "${UUT}:1:SIG:sample_count:FREQ:nzc") {
	field(INPA, "${UUT}:1:SIG:sample_count:FREQ")
	field(INPB, "${UUT}:1:SIG:sample_count:FREQ:nzc.LA")
# L: sensitivity
	field(INPL, "0.1")
# A+1 : never zero. Output Zero on a big change, then next will ->1	
	field(CALC, "ABS(A+1-B)/(A+1) > L? 0: A")
	field(OUT, "${UUT}:1:SIG:sample_count:FREQ:ONCHANGE PP")
	field(OCAL, "VAL != 0 ? 1: 0")
	field(OOPT, "Transition To Non-zero")
	field(DOPT, "Use OCAL")
	field(ODLY, "2")
}

record(longout, "${UUT}:1:SIG:sample_count:FREQ:ONCHANGE") {
	field(DTYP, "Soft Channel")
	field(FLNK, "${UUT}:1:DT PP")
}

# enum FE_STATUS { FE_IDLE, FE_SEARCH, FE_FOUND, FE_NOTFOUND, FE_FAIL };
record(mbbi, "${UUT}:MODE:TRANS_ACT:FIND_EV:STA") {
	field(DTYP, "stream")
	field(DESC, "transient event state")
	field(NOBT, "3")
	field(ZRST, "IDLE")
	field(ONST, "SEARCH")
	field(TWST, "FOUND")
	field(THST, "NOT FOUND")
	field(FRST, "FAIL")
	field(INP,  "@transient.proto findEventStatus ${SPORTT}")
	field(SCAN, "I/O Intr")		
}

record(longin, "${UUT}:MODE:TRANS_ACT:FIND_EV:CUR") {
	field(DTYP, "stream")
	field(INP,  "@transient.proto findEventCurBuf ${SPORTT}")
	field(SCAN, "I/O Intr")
}

#                     123456789012345678901234567890	27+11 = 39
record(longin, "${UUT}:MODE:TRANS_ACT:FIND_EV:NBU") {
	field(DTYP, "stream")
	field(INP,  "@transient.proto findEventTotBuf ${SPORTT}")
	field(SCAN, "I/O Intr")
}

record(longin, "${UUT}:MODE:TRANS_ACT:POST:MDSPUTCH") {
	field(DTYP, "stream")
	field(INP,  "@transient.proto mdsPutCh ${SPORTT}")
	field(SCAN, "I/O Intr")
	field(PINI, "YES")
	field(VAL,  "-1")
}
