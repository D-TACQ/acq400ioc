record(longin, "${UUT}:JDG:BN")
{
	field(PINI, "0")
	field(DTYP, "asynInt32")
	field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BUFFER_NUM")
	field(SCAN, "I/O Intr")
	field(TSE,  "-2")
}


record(mbbo, "${UUT}:JDG:MASK_PCT")
{
	field(DTYP, "Soft Channel")
	field(DESC, "Mask from data +/-%FS")
	field(NOBT, "4")
	field(ZRST, "DISABLE")
	field(ONST, "20%")
	field(TWST, "10%")
	field(THST, "5%")
	field(FRST, "2%")
	field(FVST, "1%")
	field(SXST, "0.5%")
	field(SVST, "0.2%")
	field(EIST, "0.1%")
	field(ZRVL, "1000")
	field(ONVL, "200" )
	field(TWVL, "100" )
	field(THVL, "50"  )
	field(FRVL, "20"  )
	field(FVVL, "10"  )
	field(SXVL, "5"   )
	field(SVVL, "2"   )
	field(EIVL, "1"   )
	field(FLNK, "${UUT}:JDG:MASK_PCT:c")
}

record (calcout, "${UUT}:JDG:MASK_PCT:c")
{
	field(INPA, "${UUT}:JDG:MASK_PCT")
	field(INPB, "${MAXCODE}")
	field(CALC, "B*A/1000")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MAKE_MASK_FROM_DATA")
}
record(longout, "${UUT}:JDG:MASK_FROM_DATA")
{
	field(PINI, "0")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MAKE_MASK_FROM_DATA")
	field(HOPR, "1000")
	field(LOPR,  "0")
}

record(longout, "${UUT}:JDG:MASK_BOXCAR")
{
	field(PINI, "0")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MASK_BOXCAR")
	field(HOPR, "32")
	field(LOPR,  "0")
	field(PINI,  "YES")
	field(VAL,   "0")
}

record(longout, "${UUT}:JDG:MASK_SQUARE")
{
	field(PINI, "0")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MASK_SQUARE")
	field(HOPR, "32")
	field(LOPR,  "0")
	field(PINI,  "YES")
	field(VAL,   "0")
}

record(longout, "${UUT}:JDG:SAMPLE_DELTA_NS")
{
	field(PINI, "0")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SAMPLE_DELTA_NS")
	field(HOPR, "1000000")
	field(LOPR,  "0")
}

record(longin, "${UUT}:JDG:CHX:FAIL:1")
{
	field(DTYP, "asynInt32")
	field(INP,  "@asyn($(PORT),0,$(TIMEOUT))FAIL_MASK32")
	field(SCAN, "I/O Intr")
	field(TSE,  "-2")	
}

record(longin, "${UUT}:JDG:CHX:FAIL:2")
{
	field(DTYP, "asynInt32")
	field(INP,  "@asyn($(PORT),1,$(TIMEOUT))FAIL_MASK32")
	field(SCAN, "I/O Intr")
	field(TSE,  "-2")	
}


record(longin, "${UUT}:JDG:CHX:SAMPLE_COUNT")
{
	field(DTYP, "asynInt32")
	field(INP,  "@asyn($(PORT),0,$(TIMEOUT))SAMPLE_COUNT")
	field(SCAN, "I/O Intr")
	field(TSE,  "-2")
}

record(longin, "${UUT}:JDG:CHX:CLOCK_COUNT")
{
	field(DTYP, "asynInt32")
	field(INP,  "@asyn($(PORT),0,$(TIMEOUT))CLOCK_COUNT")
	field(SCAN, "I/O Intr")
	field(TSE,  "-2")
}

record(longin, "${UUT}:JDG:CHX:BURST_COUNT")
{
	field(DTYP, "asynInt32")
	field(INP,  "@asyn($(PORT),0,$(TIMEOUT))BURST_COUNT")
	field(SCAN, "I/O Intr")
	field(TSE,  "-2")	
}


record(waveform, "${UUT}:JDG:CHX:FAIL:ALL")
{
	field(DTYP, "asynInt8ArrayIn")
	field(INP,  "@asyn($(PORT),0,$(TIMEOUT))RESULT_FAIL")
	field(FTVL, "UCHAR")
	field(NELM, "$(NCHAN1)")
	field(SCAN, "I/O Intr")
	field(TSE,  "-2")
}


record(bi, "${UUT}:JDG:OK")
{	
	field(PINI, "0")
	field(DTYP, "asynInt32")
	field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OK")
	field(SCAN, "I/O Intr")
	field(ZNAM, "Fail")
	field(ONAM, "Pass")
	field(TSE,  "-2")
}

record(mbbo, "${UUT}:JDG:UPDATE")
{
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),0,$(TIMEOUT))UPDATE_ON")
	field(NOBT, "2")
	field(PINI, "1")
	field(VAL,  "3")
	field(ZRST, "UPDATE_NEVER")
	field(ONST, "UPDATE_ON_FAIL")
	field(TWST, "UPDATE_ON_SUCCESS")
	field(THST, "UPDATE_ALWAYS")
	field(ZRVL, "0")
	field(ONVL, "1")
	field(TWVL, "2")
	field(THVL, "3")
}


