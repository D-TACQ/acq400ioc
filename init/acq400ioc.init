#!/bin/sh

ETOP=/usr/local/epics
STCMD=/tmp/st.cmd
PIDF=/var/run/acq400ioc.pid
LOG=/var/log/epics.log
NICE=5
LG="logger -t acq400ioc.init"

if [ -f /etc/profile.d/epics.sh ]; then
	source /etc/profile.d/epics.sh
fi
if [ -f /mnt/local/epics.sh ]; then
	source /mnt/local/epics.sh
fi
if [ -f /mnt/local/sysconfig/epics.sh ]; then
	source /mnt/local/sysconfig/epics.sh
fi

make_caget() {
	PFX=${1%*:$2}
	VERB=/usr/local/bin/caget_$PFX
	if [ ! -e $VERB ]; then
cat - >$VERB <<EOF
#!/bin/sh
PV=${PFX}:\$(basename \${0})
VALUE=\$(caget -s \${PV})
if [ \$? -eq 0 ]; then
	echo \${VALUE#${PFX}:}
else
	echo \${VALUE}
fi
EOF
		chmod a+rx $VERB		
	fi
	ln -s $VERB /etc/acq400/$3/$2
}

make_caget_w() {
	PFX=${1%*:$2}
	VERB=/usr/local/bin/caget_w_$PFX
	if [ ! -e $VERB ]; then
cat - >$VERB <<EOF
#!/bin/sh
PV=${PFX}:\$(basename \${0})
VALUE=\$(caget \${PV})
if [ \$? -eq 0 ]; then
	echo \${VALUE#${PFX}:}
else
	echo \${VALUE}
fi
EOF
		chmod a+rx $VERB		
	fi
	ln -s $VERB /etc/acq400/$3/$2	
}

make_caput() {
	PFX=${1%*:$2}
	VERB=/usr/local/bin/caput_$PFX
	if [ ! -e $VERB ]; then
cat - >$VERB <<EOF
#!/bin/sh
PV=${PFX}:\$(basename \${0})
if [ "\$1" = "" ]; then
	VALUE=\$(caget -s \${PV})
	if [ \$? -eq 0 ]; then
			echo \${VALUE#${PFX}:}
	else
			echo \${VALUE}
	fi
else
	VALUE=\$(caput \${PV} \$1)
	if [ \$? -ne 0 ]; then
		echo ERROR
	fi
fi 
EOF
		chmod a+rx $VERB		
	fi
	ln -s $VERB /etc/acq400/$3/$2
}

wait_ioc_ready() {
	let pollcat=0;
	while [ ! -e /tmp/records.dbl ]; do
		let report=$pollcat%5
		if [ $report -eq 0 ]; then
			$LG wait_ioc_ready $pollcat
		fi
		sleep 1
		let pollcat="$pollcat+1"
	done	
}

make_epics_knobs() {
	if [ -e /tmp/epics_knobs_done ]; then
		return
	fi

	mkdir -p /etc/acq400/S
	for PV in $(egrep SYS:[5Vv]\|Z:TEMP /tmp/records.dbl)
	do
		NU=${PV#*:}
		make_caget $PV ${NU#*:} S
	done
	
	for PV in $(egrep SIG\|GAIN /tmp/records.dbl | grep -v .[rsfw]$)
	do
		NU=${PV#*:}
		SITE=${NU:0:1}
		make_caput $PV ${NU#*:} ${SITE}	
	done
	for PV in $(egrep CAL:E /tmp/records.dbl | grep -v .[rsfw]$)
	do
		NU=${PV#*:}
		SITE=${NU:0:1}
		make_caget_w $PV ${NU#*:} ${SITE}	
	done	
	for PV in $(grep ACQ43X_SAMPLE_RATE /tmp/records.dbl)
	do
		NU=${PV#*:}
		SITE=${NU:0:1}
		make_caput $PV ${NU#*:} ${SITE}
	done
	# disconnect old way @@todo remove me
	for PV in $(grep FPMUX /tmp/records.dbl)
	do
		NU=${PV#*:}
		make_caput $PV $NU 0
	done
	(cd /etc/acq400/0/; rm -f fpmux)
	
	killall voltsmon
	daemon /usr/local/bin/voltsmon.epics
	echo make_epics_knobs_done >/tmp/epics_knobs_done
	if [ -e /usr/local/init/acq400_knobs.init ]; then
		/usr/local/init/acq400_knobs.init start
	fi
}
make_stcmd() {
	if [ ! -e ${STCMD} ]; then
		echo "++ create EPICS db ${STCMD}" 
		(cd ${ETOP}; ./scripts/load.records > ${STCMD})		
	fi
	touch /dev/shm/AI
}

make_aliases_loop() {
	while read PV
	do
		echo alias\(\"$PV\",\"$1:${PV#*:}\"\)
	done
}
make_aliases() {
	make_aliases_loop $1 </tmp/records.dbl >/usr/local/epics/db/local-aliases.db	 
}

bump() 
{
	echo X | tr X \\030 | acq4xx-epics-console >/dev/null
}

start_ioc() {
	/usr/local/bin/procServ \
		-c ${ETOP} -p $PIDF -L $LOG \
		2222 \
	/bin/nice -n $NICE /usr/local/bin/acq400ioc ${STCMD}
	$LG start_ioc PID $(cat $PIDF)
}

stop_ioc() {
	if [ -r ${PIDF} ]; then
		$LG stop_ioc PID $(cat $PIDF)
		kill -s TERM $(cat ${PIDF})
		rm ${PIDF}
	fi
}

restart() {
	if [ "$1" = "force" ]; then
		rm -f ${STCMD}
	fi	
	make_stcmd
	stop_ioc
	start_ioc
	wait_ioc_ready
	stop_ioc
	make_epics_knobs
	[ "x$IOC_GLOBAL_ALIAS_PFX" != "x" ] && make_aliases $IOC_GLOBAL_ALIAS_PFX
	start_ioc
}


case "$1" in
bump)
	bump;;
forcestart)
	restart force;;
start|"")
	restart;;
stop)
	stop_ioc;;

*)
	echo usage acq400ioc.init start\|stop\|forcestart;;
esac
