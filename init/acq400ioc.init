#!/bin/sh

ETOP=/usr/local/epics
STCMD=/tmp/st.cmd
PIDF=/var/run/acq400ioc.pid
LOG=/var/log/epics.log
NICE=10
LG="logger -t acq400ioc.init"
RL=/tmp/records.dbl

if [ -f /etc/profile.d/epics.sh ]; then
	source /etc/profile.d/epics.sh
fi
if [ -f /mnt/local/epics.sh ]; then
	source /mnt/local/epics.sh
fi
if [ -f /mnt/local/sysconfig/epics.sh ]; then
	if [ -z $EPICS_LOCAL_SYSCONFIG ]; then 
		source /mnt/local/sysconfig/epics.sh
		(
			grep ^export /mnt/local/sysconfig/epics.sh
			[ -z $IOC_HOST ] && echo export IOC_HOST=$(hostname)
			echo export EPICS_LOCAL_SYSCONFIG=1
		) >> /etc/profile.d/epics.sh
	fi
else
	echo "WARNING: file /mnt/local/sysconfig/epics.sh missing"
fi

source /usr/local/epics/scripts/init_support.sh
source /usr/local/epics/scripts/init_make_knobs.sh

if [ ! -e $LOG ]; then
	grep -q emlog /proc/modules; [ $? -ne 0 ] && /sbin/insmod /usr/local/lib/modules/emlog.ko
        [ -e $LOG ] || mkemlog $LOG
fi

wait_ioc_records_loaded() {
	let pollcat=0;
	while [ ! -e "$RL.done" ]; do
		let report=$pollcat%5
		if [ $report -eq 0 ]; then
			$LG wait_ioc_records_loaded $pollcat
		fi
		sleep 1
		let pollcat="$pollcat+1"
	done	
}


make_stcmd() {
	if [ ! -e ${STCMD} ]; then (
		echo "++ create EPICS db ${STCMD}" 
		cd ${ETOP}
		./scripts/extract_gains
		./scripts/load.records > ${STCMD}
	) fi
	for file in /usr/local/epics/init.d/*.init_final
	do
		if [ -x $file ]; then
			echo 1>&2 "execute extension $file"
			$file
		elif [ -e $file ]; then
			echo 1>&2 "source extension $file"
			source $file
		fi 
	done	
	touch /dev/shm/AI
}

make_aliases_loop() {
	while read PV
	do
		echo alias\(\"$PV\",\"$1:${PV#*:}\"\)
	done
}
make_aliases() {
	make_aliases_loop $1 <$RL >/usr/local/epics/db/local-aliases.db	 
}

bump() 
{
	echo X | tr X \\030 | acq4xx-epics-console >/dev/null
}

start_ioc() {
	/usr/local/bin/procServ \
		-c ${ETOP} -p $PIDF -L $LOG 2222 \
		/bin/nice -n $NICE /usr/local/bin/acq400ioc ${STCMD}
	while [ ! -r $PIDF ]; do
		usleep 10000
	done
	$LG start_ioc PID $(cat $PIDF) ioc $(pidof acq400ioc)
}

stop_ioc() {
	if [ -r ${PIDF} ]; then
		$LG stop_ioc PID $(cat $PIDF)
		kill -s TERM $(cat ${PIDF})
		rm ${PIDF}
	fi
}

restart() {
	if [ "$1" = "force" ]; then
		rm -f ${STCMD}
	fi	
	make_stcmd
	stop_ioc
	start_ioc
	wait_ioc_records_loaded
	stop_ioc
	nice /usr/local/init/acq400ioc.init make_epics_knobs

	[ "x$IOC_GLOBAL_ALIAS_PFX" != "x" ] && make_aliases $IOC_GLOBAL_ALIAS_PFX
	cat /tmp/st_final.cmd >> /tmp/st.cmd
	start_ioc
}


case "$1" in
bump)
	bump;;
forcestart)
	restart force;;
start|"")
	restart;;
stop)
	stop_ioc;;
suspend)
	kill -STOP $(pidof acq400ioc);;
resume)
	kill -CONT $(pidof acq400ioc);;
make_epics_knobs)
	sleep 1; 
	echo "+++ make_epics_knobs"
	make_epics_knobs;;
*)
	echo 'usage acq400ioc.init start|stop|forcestart|suspend|resume';;
esac
